{"version":3,"sources":["audios/blue.mp3","audios/green.mp3","audios/red.mp3","audios/yellow.mp3","registerServiceWorker.js","constants.js","components/Title.js","components/Header.js","screens/Shell.js","components/Buttons.js","screens/Welcome.js","components/Game.js","components/Score.js","utils/create-neon-animation.js","components/Pad.js","components/Pads.js","components/CenterOverlay.js","components/GrayScale.js","utils/sleep.js","utils/get-random-id.js","utils/create-action.js","actions/game.js","audios/index.js","screens/Player.js","screens/Board.js","reducers/pads.js","reducers/game.js","reducers/match.js","reducers/index.js","store.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","colors","red","blue","green","yellow","white","dark","ids","Headline","styled","h1","Title","value","list","Object","keys","size","length","letters","Array","Math","floor","reduce","acc","n","concat","slice","map","x","color","i","key","style","colorify","Header","withReflex","div","Shell","this","props","highscore","children","align","justify","width","height","p","flex","Component","connect","game","styles","Button","button","ButtonLink","Link","Welcome","to","Game","disbledPointer","Score","createNeonAnimation","keyframes","transform","lighten","from","activeCSS","Pad","active","PadsByComponentName","GreenPad","m","className","RedPad","YellowPad","BluePad","Pads","pad","onClick","component","Composed","CenterOverlay","GrayScale","disabled","ms","Promise","r","setTimeout","getRandomId","random","createAction","type","payload","START_GAME","START_SONG","FINISH_SONG","LIGHTEN_PAD","LIGHTEN_OFF_PAD","GUESS_COLOR","NEXT_LEVEL","start","next","guessColor","startSong","finishSong","lightenPad","lightenOffPad","actionCreators","startGame","nextLevel","guess","succeeded","id","dispatch","getState","a","sleep","SONG_DELAY_TIME","all","guessed","done","sing","blueTone","greenTone","redTone","yellowTone","Player","player","refs","currentTime","play","audios","ref","preload","src","pads","find","Board","startMatch","actions","tail","gameOver","singing","score","bind","_","onPadClick","toString","bindActionCreators","initialState","combineReducers","action","b","routing","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","rootReducer","history","syncHistoryWithStore","hashHistory","store","ReactDOM","render","path","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c6de1a6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue.d6f8a4c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.3c8ca947.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.8d481077.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.3ee58245.mp3\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const colors = {\n  red: '#FF4136',\n  blue: '#0074D9',\n  green: '#2ECC40',\n  yellow: '#FFDC00',\n  white: 'white',\n  dark: '#1B1A1A',\n}\n\nexport const ids = [\n  'green',\n  'red',\n  'yellow',\n  'blue',\n];\n\nexport const SONG_DELAY_TIME = 200;\nexport const REDUCED_DELAY_TIME = SONG_DELAY_TIME - 100;\nexport const NEXT_LEVEL_DELAY_TIME = 500;\nexport const REPO_URL = 'https://github.com/weslleyaraujo/react-simon/';\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../constants';\nimport PropTypes from 'prop-types';\n\nconst Headline = styled.h1`\n  color: #FFF;\n  font-size: 5em;\n  text-align: center;\n`;\n\nconst colorify = ({ colors, value }) => {\n  const list = Object.keys(colors);\n  const size = list.length - 1;\n  const letters = [...Array(Math.floor(value.length / size))]\n    .reduce((acc, n) => [...acc, ...list], [])\n    .concat(list.slice(0, list.length % size))\n    .map(x => colors[x])\n    .map((color, i) => (\n      <span key={i} style={{ color }}>{value[i]}</span>\n    ));\n\n  return (\n    <span>{letters}</span>\n  );\n}\n\nconst Title = ({ value }) =>\n  (<Headline>{colorify({ colors, value })}</Headline>);\n\nTitle.propTypes = {\n  value: PropTypes.any.isRequired,\n};\n\nexport default Title;\n","import styled from 'styled-components';\nimport { withReflex } from 'reflexbox';\n\nconst Header = withReflex()(styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n`);\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Flex, Box } from 'reflexbox';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\n\nexport class Shell extends Component {\n  render() {\n    const { highscore, style, children } = this.props;\n    return (\n      <Flex align=\"center\" justify=\"center\" style={{ width: '100%', height: '100%', ...style }} >\n        <Header p={2} justify=\"space-between\" flex>\n          <Box>\n            HIGH SCORE: {highscore} <br />\n          </Box>\n        </Header>\n        <Box>\n          {children}\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default connect(\n  ({ game }) => game,\n)(Shell);\n","import styled from 'styled-components';\nimport { Link } from 'react-router';\n\nconst styles = `\n  font-size: 2em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid white;\n  color: white;\n  background-color: transparent;\n  font-family: 'Bungee', sans-serif;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 0.3s;\n  outline: none;\n  text-decoration: none;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Button = styled.button`${styles}`\nexport const ButtonLink = styled(Link)`${styles}`;\n","import React from 'react';\nimport { Flex } from 'reflexbox';\n\nimport Title from '../components/Title';\nimport Shell from './Shell';\nimport { ButtonLink } from '../components/Buttons';\n\nconst Welcome = () => (\n  <Shell>\n    <Title value=\"REACT SIMON\" />\n    <Flex justify=\"center\">\n      <ButtonLink to=\"/board/\">Play</ButtonLink>\n    </Flex>\n  </Shell>\n);\n\nexport default Welcome;\n","import styled from 'styled-components';\n\nconst Game = styled.div`\n  pointer-events: ${props => props.disbledPointer ? 'none' : 'initial'};\n  position: relative;\n`;\n\nexport default Game;\n\n","import styled from 'styled-components';\nimport { colors } from '../constants';\n\nconst Score = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  margin: auto;\n  background-color: ${colors.dark};\n  font-size: ${props => props.length <= 2 ? '62px' : '45px'};\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n  z-index: 2;\n  padding: 5px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, .8);\n  text-align: center;\n`;\n\nexport default Score;\n","import { keyframes } from 'styled-components';\n\nconst createNeonAnimation = (color) => keyframes`\n  from {\n    border: 1px solid #FFF;\n    box-shadow:\n      0 0 10px  #FFF,\n      0 0 20px  #FFF,\n      0 0 30px  #FFF,\n      0 0 40px  ${color},\n      0 0 70px  ${color},\n      0 0 80px  ${color},\n      0 0 100px ${color},\n      0 0 150px ${color};\n  }\n  to {\n    boder: 1px solid #FFF;\n    box-shadow:\n      0 0 5px  #FFF,\n      0 0 10px #FFF,\n      0 0 15px #FFF,\n      0 0 20px ${color},\n      0 0 35px ${color},\n      0 0 40px ${color},\n      0 0 50px ${color},\n      0 0 75px ${color};\n  }\n`;\n\nexport default createNeonAnimation;\n","import styled from 'styled-components';\nimport { withReflex } from 'reflexbox';\nimport color from 'color';\nimport createNeonAnimation from '../utils/create-neon-animation';\n\nconst transform = `\n  transform: scale(1.02);\n`\n\nconst lighten = from => color(from).lighten(0.333);\n\nconst activeCSS = props => `\n  background-color: ${lighten(props.color)} !important;\n  animation: ${createNeonAnimation(props.color)} 0.5s linear;\n  ${transform}\n`;\n\nconst Pad = styled.div`\n  width: 200px;\n  height: 200px;\n  box-sizing: border-box;\n  background-color: ${({ color }) => color}\n  cursor: pointer;\n  animation: none;\n  transition: 0.2s;\n  ${(props) => props.active ? activeCSS(props) : ''}\n\n  @media (max-width: 600px) {\n    width: 170px;\n    height: 170px;\n  }\n\n  &:active {\n    background-color: ${({ color }) => lighten(color)}\n    ${activeCSS}\n  }\n\n  &:hover {\n    ${transform}\n    box-shadow: 0 0 15px rgba(0, 0, 0, .8);\n  }\n\n  &.top-left {\n    border-radius: 320px 20px 20px 20px;\n  }\n\n  &.top-right {\n    border-radius: 20px 320px 20px 20px;\n  }\n\n  &.bottom-left {\n    border-radius: 20px 20px 20px 320px;\n  }\n\n  &.bottom-right {\n    border-radius: 20px 20px 320px 20px;\n  }\n\n`;\n\nexport default withReflex()(Pad);\n","import React from 'react';\n\nimport Pad from './Pad';\nimport { colors } from '../constants';\n\nexport const PadsByComponentName = {\n  GreenPad: ({ ...props }) => (\n    <Pad m={1} color={colors.green} className=\"top-left\" {...props} />\n  ),\n  RedPad: ({ ...props }) => (\n    <Pad m={1} color={colors.red} className=\"top-right\" {...props} />\n  ),\n  YellowPad: ({ ...props }) => (\n    <Pad m={1} color={colors.yellow} className=\"bottom-left\" {...props} />\n  ),\n  BluePad: ({ ...props }) => (\n    <Pad m={1} color={colors.blue} className=\"bottom-right\" {...props} />\n  ),\n};\n\nconst Pads = ({ pad, onClick }) => {\n  const { component } = pad;\n  const Composed = PadsByComponentName[component];\n  return (\n    <Composed\n      {...pad}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default Pads;\n","import styled from 'styled-components';\nimport { withReflex } from 'reflexbox';\n\nconst CenterOverlay = withReflex()(styled.div`\n  position: absolute;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 4;\n  text-align: center;\n  background-color: rgba(0,0,0,0.9);\n  height: 250px;\n`);\n\n\nexport default CenterOverlay;\n","import styled from 'styled-components';\n\nconst GrayScale = styled.div`\n  transition: 0.7s;\n  filter: grayscale(100%);\n  ${props => !props.disabled ? '' : `\n    filter: none;\n  `}\n`;\n\nexport default GrayScale;\n\n","export default function(ms = 0) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","import { ids } from '../constants';\n\nconst getRandomId = () => ids[Math.floor(Math.random() * ids.length)];\n\nexport default getRandomId;\n","export default function createAction(type) {\n  return (payload = {}) => ({\n    type,\n    payload,\n  });\n}\n","import sleep from '../utils/sleep';\nimport getRandomId from '../utils/get-random-id';\nimport createAction from '../utils/create-action';\nimport {\n  SONG_DELAY_TIME,\n  REDUCED_DELAY_TIME,\n} from '../constants';\n\nexport const START_GAME = 'START_GAME';\nexport const START_SONG = 'START_SONG';\nexport const FINISH_SONG = 'FINISH_SONG';\nexport const LIGHTEN_PAD = 'LIGHTEN_PAD';\nexport const LIGHTEN_OFF_PAD = 'LIGHTEN_OFF_PAD';\nexport const GUESS_COLOR = 'GUESS_COLOR';\nexport const NEXT_LEVEL = 'NEXT_LEVEL';\n\nconst start = createAction(START_GAME);\nconst next = createAction(NEXT_LEVEL);\n\nconst startGame = payload => start({ next: getRandomId() });\nconst nextLevel = payload => next({ next: getRandomId() });\n\nconst guessColor = createAction(GUESS_COLOR);\nconst startSong = createAction(START_SONG);\nconst finishSong = createAction(FINISH_SONG);\nconst lightenPad = createAction(LIGHTEN_PAD);\nconst lightenOffPad = createAction(LIGHTEN_OFF_PAD);\n\nconst sing = (payload) => async (dispatch, getState) => {\n  dispatch(startSong());\n  const { match } = getState();\n  for (let i = 0; i <= match.all.length - 1; i++) {\n    const id = match.all[i];\n    dispatch(lightenPad({ id }));\n    await sleep(SONG_DELAY_TIME);\n    dispatch(lightenOffPad());\n    await sleep(SONG_DELAY_TIME);\n  }\n\n  dispatch(finishSong());\n}\n\n\nconst guess = ({ succeeded, id }) => async (dispatch, getState) => {\n  dispatch(guessColor({ succeeded, id }));\n  dispatch(startSong());\n  dispatch(lightenPad({ id }));\n  await sleep(REDUCED_DELAY_TIME);\n  dispatch(lightenOffPad());\n  await sleep(REDUCED_DELAY_TIME);\n  dispatch(finishSong());\n\n  const { match } = getState();\n  const { all, guessed } = match;\n  const done = (all.length === guessed.length) && succeeded;\n\n  return new Promise(r => r({ done }));\n}\n\nexport const actionCreators = {\n  startSong,\n  startGame,\n  finishSong,\n  lightenPad,\n  lightenOffPad,\n  nextLevel,\n  guessColor,\n  guess,\n  sing,\n}\n","import blueTone from './blue.mp3';\nimport greenTone from './green.mp3';\nimport redTone from './red.mp3';\nimport yellowTone from './yellow.mp3';\n\nexport default {\n  blue: blueTone,\n  green: greenTone,\n  red: redTone,\n  yellow: yellowTone,\n}\n","import React, { Component } from 'react';\nimport audios from '../audios';\nimport { connect } from 'react-redux';\n\nexport class Player extends Component {\n\n  componentDidUpdate() {\n    const { active } = this.props;\n    const player = this.refs[active];\n    if (!player) {\n      return;\n    }\n\n    player.currentTime = 0;\n    player.play();\n  }\n\n  render() {\n    return (\n      <div>\n        {Object.keys(audios).map((id, key) => (\n          <audio ref={id} preload=\"auto\" src={audios[id]} key={key}></audio>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default connect(({ pads, game }) => {\n  const active = pads.find(({ active }) => active);\n  return {\n    active: active ? active.id : null,\n  }\n})(Player);\n","import React, { Component } from 'react';\nimport { Flex } from 'reflexbox';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Game from '../components/Game';\nimport Score from '../components/Score';\nimport Pads from '../components/Pads';\nimport Shell from './Shell';\nimport CenterOverlay from '../components/CenterOverlay';\nimport GrayScale from '../components/GrayScale';\nimport { Button } from '../components/Buttons';\nimport { actionCreators } from '../actions/game';\nimport { SONG_DELAY_TIME, NEXT_LEVEL_DELAY_TIME } from '../constants';\nimport Player from './Player';\nimport sleep from '../utils/sleep';\n\nexport class Board extends Component {\n\n  componentDidMount() {\n    this.startMatch();\n  }\n\n  startMatch() {\n    const { actions} = this.props;\n    actions.startGame();\n    sleep(SONG_DELAY_TIME).then(() => actions.sing());\n  }\n\n  onPadClick({ id }) {\n    const { actions, game, match } = this.props;\n    const tail = match.guessed.length;\n    const succeeded = match.all[tail] === id;\n\n    if (!game.gameOver) {\n      actions.guess({ id, succeeded })\n        .then(async ({ done }) => {\n          if (done) {\n            actions.nextLevel();\n            await sleep(NEXT_LEVEL_DELAY_TIME);\n            actions.sing();\n          }\n        });\n    }\n  }\n\n  render() {\n    const { singing, score, gameOver, highscore } = this.props.game;\n    return (\n      <Shell>\n        {gameOver &&\n          <CenterOverlay p={2}>\n            <h2>SCORE {score}</h2>\n            <h3>HIGH SCORE {highscore}</h3>\n            <Button onClick={this.startMatch.bind(this)}>Try again</Button>\n          </CenterOverlay>\n        }\n        <GrayScale disabled={!gameOver}>\n          <Game disbledPointer={(singing || gameOver)}>\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n            >\n              {this.props.pads.slice(0, 2).map((pad, i) => (\n                <Pads key={i} pad={pad} onClick={_ => this.onPadClick({ id: pad.id })} />\n              ))}\n            </Flex>\n            <Score length={score.toString().length}>{score}</Score>\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n            >\n              {this.props.pads.slice(2, 4).map((pad, i) => (\n                <Pads key={i} pad={pad} onClick={_ => this.onPadClick({ id: pad.id })} />\n              ))}\n            </Flex>\n          </Game>\n        </GrayScale>\n        <Player />\n      </Shell>\n    );\n  }\n}\n\nexport default connect(\n  state => state,\n  dispatch => ({\n    actions: bindActionCreators(actionCreators, dispatch),\n  }),\n)(Board);\n","import { LIGHTEN_PAD, LIGHTEN_OFF_PAD } from '../actions/game';\n\nexport const initialState = [\n  {\n    id: 'green',\n    component: 'GreenPad',\n    active: false,\n  },\n  {\n    id: 'red',\n    component: 'RedPad',\n    active: false,\n  },\n  {\n    id: 'yellow',\n    component: 'YellowPad',\n    active: false,\n  },\n  {\n    id: 'blue',\n    component: 'BluePad',\n    active: false,\n  },\n];\n\nexport default function pads(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case LIGHTEN_PAD:\n      return state.map(b => ({\n        ...b,\n        active: payload.id === b.id,\n      }));\n\n    case LIGHTEN_OFF_PAD:\n      return state.map(b => ({\n        ...b,\n        active: false,\n      }));\n\n    default:\n      return state;\n  }\n}\n","import {\n  START_SONG,\n  FINISH_SONG,\n  GUESS_COLOR,\n  NEXT_LEVEL,\n  START_GAME,\n} from '../actions/game';\n\nexport const initialState = {\n  singing: true,\n  gameOver: false,\n  score: 0,\n  highscore: 0,\n}\n\nexport default function game(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case START_GAME:\n      return {\n        ...state,\n        gameOver: false,\n        score: 0,\n      }\n\n    case START_SONG:\n      return {\n        ...state,\n        singing: true,\n      }\n\n    case FINISH_SONG:\n      return {\n        ...state,\n        singing: false,\n      }\n\n    case NEXT_LEVEL:\n      return {\n        ...state,\n        score: state.score + 1,\n      }\n\n    case GUESS_COLOR:\n      return {\n        ...state,\n        gameOver: !payload.succeeded,\n        highscore: (!payload.succeeded && state.score) > state.highscore ? state.score : state.highscore,\n      }\n\n    default:\n      return state;\n  }\n}\n","import { START_GAME, GUESS_COLOR, NEXT_LEVEL } from '../actions/game';\n\nexport const initialState = {\n  guessed: [],\n  all: [],\n}\n\nexport default function blocks(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case START_GAME:\n      return {\n        guessed: [],\n        all: [\n          payload.next,\n        ],\n      }\n\n    case NEXT_LEVEL:\n      return {\n        guessed: [],\n        all: state.all.concat(payload.next),\n      }\n\n    case GUESS_COLOR:\n      return {\n       ...state,\n        guessed: payload.succeeded ? state.guessed.concat(payload.id) : state.guessed,\n      }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer as routing } from 'react-router-redux';\n\nimport pads from './pads';\nimport game from './game';\nimport match from './match';\n\nexport default combineReducers({\n  pads,\n  game,\n  match,\n  routing,\n});\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(\n    thunk,\n  )\n);\n\nexport default createStore(rootReducer, {}, enhancer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, Router, hashHistory } from \"react-router\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport Welcome from \"./screens/Welcome\";\nimport Board from \"./screens/Board\";\nimport store from \"./store\";\nimport \"./index.css\";\n\nconst history = syncHistoryWithStore(hashHistory, store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <Route path=\"/\" component={Welcome} />\n      <Route path=\"/board/\" component={Board} />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}